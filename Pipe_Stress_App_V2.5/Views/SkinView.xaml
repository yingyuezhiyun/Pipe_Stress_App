<UserControl
    x:Class="Pipe_Stress_App_V2._5.Views.SkinView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:assists="clr-namespace:Pipe_Stress_App_V2._5.Common.Assists"
    xmlns:converters="clr-namespace:Pipe_Stress_App_V2._5.Common.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Pipe_Stress_App_V2._5.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:materialDesignColors="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    FontFamily="Microsoft YaHei UI"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
            <converters:MultiValueEqualityConverter x:Key="MultiValueEqualityConverter" />
            <Style
                x:Key="HexLabelTextBlock"
                BasedOn="{StaticResource MaterialDesignBody2TextBlock}"
                TargetType="TextBlock">
                <Setter Property="Margin" Value="8" />
            </Style>

            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>

            <Style x:Key="LabelTextBox" TargetType="TextBlock">
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,0,0,4" />
            </Style>
            <DataTemplate x:Key="SwatchColorTemplate" DataType="{x:Type Color}">
                <Button
                    Width="40"
                    Height="40"
                    Background="{Binding Converter={StaticResource ColorToBrushConverter}}"
                    Command="{Binding DataContext.ChangeHueCommand, RelativeSource={RelativeSource AncestorType=local:SkinView}}"
                    CommandParameter="{Binding}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="assists:ButtonAssist.UniformCornerRadius" Value="0" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Margin" Value="1,1,0,0" />
                            <Setter Property="materialDesign:RippleAssist.IsDisabled" Value="True" />
                            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0" />
                            <Setter Property="Tag" Value="0" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(assists:ButtonAssist.UniformCornerRadius)"
                                                    To="8"
                                                    Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(assists:ButtonAssist.UniformCornerRadius)"
                                                    From="8"
                                                    Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource MultiValueEqualityConverter}">
                                            <Binding
                                                Mode="OneWay"
                                                Path="DataContext.SelectedColor"
                                                RelativeSource="{RelativeSource AncestorType=local:SkinView}" />
                                            <Binding Mode="OneWay" />
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(assists:ButtonAssist.UniformCornerRadius)"
                                                    To="20"
                                                    Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(assists:ButtonAssist.UniformCornerRadius)"
                                                    From="20"
                                                    Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <DockPanel LastChildFill="False">
            <Border DockPanel.Dock="Bottom" Style="{StaticResource HorizontalDividerBorder}" />
            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <materialDesign:PackIcon
                    Width="40"
                    Height="40"
                    Foreground="{DynamicResource PrimaryHueLightBrush}"
                    Kind="PaletteOutline" />
                <TextBlock
                    Margin="10,0,0,0"
                    VerticalAlignment="Center"
                    FontSize="25"
                    Text="主题颜色" />

            </StackPanel>
            <StackPanel
                Margin="0,0,20,0"
                DockPanel.Dock="Right"
                Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="浅色" />
                <ToggleButton
                    Margin="10,0,10,0"
                    VerticalAlignment="Center"
                    IsChecked="{Binding IsDarkTheme}" />
                <TextBlock VerticalAlignment="Center" Text="深色" />
            </StackPanel>

        </DockPanel>

        <DockPanel Grid.Row="1" Margin="0,10,0,0">
            <UniformGrid Columns="1" DockPanel.Dock="Right">
                <RadioButton
                    x:Name="MdPaletteButton"
                    MinWidth="0"
                    Margin="10,0,0,0"
                    BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                    IsChecked="True"
                    Style="{StaticResource MaterialDesignTabRadioButtonLeft}">
                    <TextBlock
                        Width="{Binding RelativeSource={RelativeSource Self}, Path=FontSize}"
                        Text="取色板"
                        TextWrapping="Wrap" />
                </RadioButton>
                <RadioButton
                    x:Name="CustomPaletteButton"
                    MinWidth="0"
                    Margin="10,0,0,0"
                    BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                    IsChecked="False"
                    Style="{StaticResource MaterialDesignTabRadioButtonLeft}">
                    <TextBlock
                        Width="{Binding RelativeSource={RelativeSource Self}, Path=FontSize}"
                        Text="自定义"
                        TextWrapping="Wrap" />
                </RadioButton>
            </UniformGrid>
            <Grid DockPanel.Dock="Left">
                <ScrollViewer Grid.Row="1" materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True">
                    <ScrollViewer Visibility="{Binding IsChecked, ElementName=MdPaletteButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Width" Value="40" />
                                        <Setter Property="Margin" Value="1,1,0,0" />
                                        <Setter Property="TextAlignment" Value="Center" />
                                    </Style>
                                </StackPanel.Resources>
                                <Rectangle Width="80" />
                                <TextBlock>50</TextBlock>
                                <TextBlock>100</TextBlock>
                                <TextBlock>200</TextBlock>
                                <TextBlock>300</TextBlock>
                                <TextBlock>400</TextBlock>
                                <TextBlock>500</TextBlock>
                                <TextBlock>600</TextBlock>
                                <TextBlock>700</TextBlock>
                                <TextBlock>800</TextBlock>
                                <TextBlock>900</TextBlock>
                                <TextBlock>A100</TextBlock>
                                <TextBlock>A200</TextBlock>
                                <TextBlock>A400</TextBlock>
                                <TextBlock>A700</TextBlock>
                            </StackPanel>
                            <ItemsControl ItemsSource="{Binding Swatches}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type materialDesignColors:ISwatch}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock
                                                Width="80"
                                                VerticalAlignment="Center"
                                                Text="{Binding Name}" />
                                            <ItemsControl ItemTemplate="{StaticResource SwatchColorTemplate}" ItemsSource="{Binding Hues}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </ScrollViewer>

                </ScrollViewer>
                <Grid Visibility="{Binding IsChecked, ElementName=CustomPaletteButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <DockPanel>
                        <TextBox
                            Margin="2,0,10,2"
                            materialDesign:HintAssist.Hint="Color HEX value"
                            DockPanel.Dock="Top"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                            Text="{Binding Color, ElementName=ColorPicker, UpdateSourceTrigger=PropertyChanged}" />
                        <Rectangle Margin="2,0,10,2" Fill="{Binding Color, ElementName=ColorPicker, Converter={StaticResource ColorToBrushConverter}}" />
                    </DockPanel>
                    <materialDesign:ColorPicker
                        x:Name="ColorPicker"
                        Grid.Column="1"
                        Color="{Binding SelectedColor, Delay=25}" />
                </Grid>

            </Grid>
        </DockPanel>
    </Grid>
</UserControl>
