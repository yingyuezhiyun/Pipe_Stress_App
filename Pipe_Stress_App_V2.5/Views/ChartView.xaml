<UserControl
    x:Class="Pipe_Stress_App_V2._5.Views.ChartView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Pipe_Stress_App_V2._5.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <DockPanel LastChildFill="False">
            <Border DockPanel.Dock="Bottom" Style="{StaticResource HorizontalDividerBorder}" />
            <TextBlock
                Margin="10,0,0,0"
                VerticalAlignment="Center"
                FontSize="25"
                Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}" />
            <StackPanel
                Grid.Row="0"
                DockPanel.Dock="Right"
                Orientation="Horizontal">

                <TextBlock
                    Margin="20,0,10,0"
                    VerticalAlignment="Center"
                    Text="刷新"
                    Visibility="{Binding AutoRefreshVisibility}" />
                <ToggleButton
                    Margin="0,0,10,0"
                    Command="{Binding ExecuteCommand}"
                    CommandParameter="定时刷新"
                    IsChecked="{Binding InputConfi.ChartAutoRefresh, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignSwitchToggleButton}"
                    Visibility="{Binding AutoRefreshVisibility}">
                    <materialDesign:PackIcon Kind="Pin" RenderTransformOrigin=".5,.5">
                        <materialDesign:PackIcon.RenderTransform>
                            <RotateTransform Angle="45" />
                        </materialDesign:PackIcon.RenderTransform>
                    </materialDesign:PackIcon>
                    <materialDesign:ToggleButtonAssist.OnContent>
                        <materialDesign:PackIcon Kind="Pin" />
                    </materialDesign:ToggleButtonAssist.OnContent>
                </ToggleButton>
                <ComboBox
                    Width="80"
                    Margin="0,0,0,5"
                    VerticalAlignment="Center"
                    materialDesign:HintAssist.Hint="刷新周期"
                    materialDesign:TextFieldAssist.SuffixText="s"
                    ItemsSource="{Binding AutoRefreshIntervals, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding InputConfi.AutoRefreshInterval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                    Visibility="{Binding AutoRefreshVisibility}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ExecuteCommand}" CommandParameter="刷新区间改变" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>

                <TextBlock
                    Margin="20,0,10,0"
                    VerticalAlignment="Center"
                    Text="区间显示" />
                <ToggleButton
                    Margin="0,0,10,0"
                    Command="{Binding ExecuteCommand}"
                    CommandParameter="开启区间显示"
                    IsChecked="{Binding InputConfi.IsScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignSwitchToggleButton}">
                    <materialDesign:PackIcon Kind="Pin" RenderTransformOrigin=".5,.5">
                        <materialDesign:PackIcon.RenderTransform>
                            <RotateTransform Angle="45" />
                        </materialDesign:PackIcon.RenderTransform>
                    </materialDesign:PackIcon>
                    <materialDesign:ToggleButtonAssist.OnContent>
                        <materialDesign:PackIcon Kind="Pin" />
                    </materialDesign:ToggleButtonAssist.OnContent>
                </ToggleButton>
                <ComboBox
                    Width="80"
                    Margin="0,0,0,5"
                    materialDesign:HintAssist.Hint="区间时长"
                    materialDesign:TextFieldAssist.SuffixText="s"
                    IsEditable="True"
                    ItemsSource="{Binding ScaleZooms, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding InputConfi.ScaleZoom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ExecuteCommand}" CommandParameter="区间显示改变" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <materialDesign:PopupBox Margin="5,0,0,0" PlacementMode="BottomAndAlignRightEdges">
                    <StackPanel>
                        <Button
                            Command="{Binding ExecuteCommand}"
                            CommandParameter="截图"
                            Content="截图" />
                        <Border Margin="10,0,10,0" Style="{StaticResource HorizontalDividerBorder}" />
                        <Button
                            Command="{Binding ExecuteCommand}"
                            CommandParameter="清空波形"
                            Content="清空波形" />
                        <Border Margin="10,0,10,0" Style="{StaticResource HorizontalDividerBorder}" />
                        <Button
                            HorizontalAlignment="Center"
                            Command="{Binding ExecuteCommand}"
                            CommandParameter="添加X轴辅助线"
                            Content="添加X轴辅助线" />
                        <Button
                            HorizontalAlignment="Center"
                            Command="{Binding ExecuteCommand}"
                            CommandParameter="添加Y轴辅助线"
                            Content="添加Y轴辅助线" />
                        <Button
                            Command="{Binding ExecuteCommand}"
                            CommandParameter="删除辅助线"
                            Content="删除辅助线" />
                    </StackPanel>

                </materialDesign:PopupBox>
            </StackPanel>
        </DockPanel>

        <ContentControl
            Grid.Row="1"
            Content="{Binding scottplot}"
            TextBlock.Foreground="{DynamicResource MaterialDesignBody}" />

    </Grid>
</UserControl>
